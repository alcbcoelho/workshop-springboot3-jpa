package com.educandoweb.course.config;

import java.util.Arrays;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Profile;

import com.educandoweb.course.entities.User;
import com.educandoweb.course.repositories.UserRepository;

// CLASSE DE CONFIGURA√á√ÉO ESPEC√çFICA PARA O PERFIL DE TESTE (TEST PROFILE)
// - para popular nosso banco de dados com alguns objetos (database seeding)

@Configuration		// indica que essa √© uma classe espec√≠fica de configura√ß√£o
@Profile("test")	// indica que a configura√ß√£o √© espec√≠fica para o perfil de teste/test profile
					// (o par√¢metro deve ter o mesmo nome da propriedade 'spring.profiles.active'
					// do arquivo application.properties)
public class TestConfig implements CommandLineRunner /* interface que far√° com que essa configura√ß√£o 
rode assim que a aplica√ß√£o rodar */ {

	@Autowired	// mecanismo de inje√ß√£o de depend√™ncia do Spring; associar√° uma inst√¢ncia de UserRepository
				// aqui dentro
	private UserRepository userRepository;

	@Override
	public void run(String... args) throws Exception {
		User u1 = new User(null, "Maria Brown", "maria@gmail.com", "98888888", "123456");
		User u2 = new User(null, "Alex Green", "alex@gmail.com", "97777777", "123456");
		
		userRepository.saveAll(Arrays.asList(u1, u2));
	}
	// üëÜ tudo colocado dentro desse m√©todo ser√° executado quando a aplica√ß√£o for iniciada
}
